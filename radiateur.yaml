blueprint:
  name: Chauffage Chambre - Automatisation
  description: Active le chauffage dans la chambre si la température est en dessous d'un certain seuil.
  domain: automation
  input:
    trigger_time_1:
      name: Heure de déclenchement 1
      description: Première heure où l'automatisation doit être déclenchée (format HH:MM:SS)
      selector:
        time: {}
    trigger_time_2:
      name: Heure de déclenchement 2
      description: Deuxième heure où l'automatisation doit être déclenchée (format HH:MM:SS)
      selector:
        time: {}
    trigger_time_3:
      name: Heure de déclenchement 3
      description: Troisième heure où l'automatisation doit être déclenchée (format HH:MM:SS)
      selector:
        time: {}
    trigger_time_4:
      name: Heure de déclenchement 4
      description: Quatrième heure où l'automatisation doit être déclenchée (format HH:MM:SS)
      selector:
        time: {}

    temperature_sensor:
      name: Capteur de température
      description: Sélectionnez le capteur de température pour vérifier la condition
      selector:
        entity:
          domain: sensor
    switch_device:
      name: Interrupteur de chauffage
      description: Sélectionnez l'interrupteur de chauffage à activer
      selector:
        entity:
          domain: switch
    temperature_threshold:
      name: Température inférieure
      description: Seuil de température en dessous duquel le chauffage doit s'activer (numérique ou entité)
      selector:
        entity:
          domain: sensor
        number:
          min: 5
          max: 30
          unit_of_measurement: °C
          mode: slider

trigger:
  - platform: time
    at: !input trigger_time_1
  - platform: time
    at: !input trigger_time_2
  - platform: time
    at: !input trigger_time_3
  - platform: time
    at: !input trigger_time_4

condition:
  - condition: template
    value_template: >
      {% if states(!input temperature_threshold) is not none %}
        {{ states('!input temperature_sensor') | float < states('!input temperature_threshold') | float }}
      {% else %}
        {{ states('!input temperature_sensor') | float < !input temperature_threshold }}
      {% endif %}
  - condition: state
    entity_id: !input switch_device
    state: 'off'

action:
  - service: switch.turn_on
    target:
      entity_id: !input switch_device

mode: single
