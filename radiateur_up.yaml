blueprint:
  name: Chauffage Chambre UP
  description: >
    Active le chauffage dans la chambre si la température est en dessous d'un certain seuil défini par une entrée.
  domain: automation
  input:
    trigger_time_1:
      name: Heure de déclenchement 1
      description: Première heure de déclenchement (HH:MM)
      default: "18:00"
      selector:
        time: {}
    trigger_time_2:
      name: Heure de déclenchement 2
      description: Deuxième heure de déclenchement (HH:MM)
      default: "19:00"
      selector:
        time: {}
    trigger_time_3:
      name: Heure de déclenchement 3
      description: Troisième heure de déclenchement (HH:MM)
      default: "20:00"
      selector:
        time: {}
    trigger_time_4:
      name: Heure de déclenchement 4
      description: Quatrième heure de déclenchement (HH:MM)
      default: "06:00"
      selector:
        time: {}
    temperature_sensor:
      name: Capteur de température
      description: Capteur de température à surveiller
      selector:
        entity:
          domain: sensor
    temperature_threshold_input:
      name: Variable de seuil de température
      description: Entrée contenant le seuil de température
      selector:
        entity:
          domain: input_number
    switch_device:
      name: Interrupteur de chauffage
      description: Sélectionnez l'interrupteur de chauffage à activer
      selector:
        entity:
          domain: switch

variables:
  temperature_sensor: !input temperature_sensor
  temperature_threshold_input: !input temperature_threshold_input
  switch_device: !input switch_device

trigger:
  - platform: time
    at: !input trigger_time_1
  - platform: time
    at: !input trigger_time_2
  - platform: time
    at: !input trigger_time_3
  - platform: time
    at: !input trigger_time_4

condition:
  - condition: template
    value_template: >
      {% set temp = states(temperature_sensor) | float(0) %}
      {% set threshold = states(temperature_threshold_input) | float(0) %}
      {{ temp > 0 and threshold > 0 and temp < threshold }}
  - condition: state
    entity_id: switch_device
    state: 'off'

action:
  - service: switch.turn_on
    target:
      entity_id: switch_device

mode: single 
